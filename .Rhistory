5.60756e-08/ 0.891217755801722
runApp('C:/Users/usato/SSL_DB/AUC')
runApp('C:/Users/usato/SSL_DB/AUC')
runApp('C:/Users/usato/SSL_DB/AUC')
runApp('C:/Users/usato/SSL_DB/AUC')
runApp('C:/Users/usato/SSL_DB/AUC')
shiny::runApp('C:/Users/usato/SSL_DB/AUC')
labelInput
runApp('C:/Users/usato/SSL_DB/AUC')
?choose.dir
labelInput
choose.dir(default = labelInput)
runApp('C:/Users/usato/SSL_DB/AUC')
labelInput
choose.dir(default = labelInput)
Platform$OS.type
choose.dir(getwd(), "Choose a suitable folder")
getwd()
runApp('C:/Users/usato/SSL_DB/AUC')
runApp('C:/Users/usato/SSL_DB/AUC')
1.58455e-07/ 1.79081359260093
1.07202e-07/ 1.79081359260093
runApp('C:/Users/usato/SSL_DB/AUC')
runApp('C:/Users/usato/SSL_DB/AUC')
runApp('C:/Users/usato/SSL_DB/AUC')
runApp('C:/Users/usato/SSL_DB/AUC')
runApp('C:/Users/usato/SSL_DB/AUC')
runApp('C:/Users/usato/SSL_DB/AUC')
oppDir=choose.dir()
oppDir
shiny::runApp('C:/Users/usato/SSL_DB/AUC')
f
i
########################################
resultBlob_tmp=NULL
resultBlob_tmp <- foreach(i = 1:length(listImageBl),.combine=rbind) %dopar% {
for (i in 1: length (listImageBl)) {
name=basename(listImageBl[i])
img_pth=listImageBl[i]
mask0=preds[i, , , ]
img0 <- t(mask0)
dim(img0) <- c(dimModel[1], dimModel[2], 1)
img = getFrame(img0, 1)
nmask = thresh(img, 18, 18, 0.009)
nmask1 <- fillHull(nmask)
nmask2 = opening(nmask1, makeBrush(7,shape='disc') ) # shape='Gaussian', sigma=50
if (Species != "LRG") { nmask2 = erode(nmask2, makeBrush(3, shape='diamond'))}
nmask3 = fillHull(nmask2)
nmask4 = bwlabel(nmask3)
if (max(nmask4)!=0) {
fts = computeFeatures.moment(nmask4)  # coordinat
shapeFeatures <- computeFeatures.shape(nmask4) # get radiuus, perimetr, area for a future IT IS MATERIAL FOR XGBOOST
BlobTable=data.frame(fts,shapeFeatures,img=name,img_pth=img_pth)
resultBlob_tmp=rbind(resultBlob_tmp,BlobTable)
}
}
}
resultBlob_tmp=NULL
#  resultBlob_tmp <- foreach(i = 1:length(listImageBl),.combine=rbind) %dopar% {
for (i in 1: length (listImageBl)) {
name=basename(listImageBl[i])
img_pth=listImageBl[i]
mask0=preds[i, , , ]
img0 <- t(mask0)
dim(img0) <- c(dimModel[1], dimModel[2], 1)
img = getFrame(img0, 1)
nmask = thresh(img, 18, 18, 0.009)
nmask1 <- fillHull(nmask)
nmask2 = opening(nmask1, makeBrush(7,shape='disc') ) # shape='Gaussian', sigma=50
if (Species != "LRG") { nmask2 = erode(nmask2, makeBrush(3, shape='diamond'))}
nmask3 = fillHull(nmask2)
nmask4 = bwlabel(nmask3)
if (max(nmask4)!=0) {
fts = computeFeatures.moment(nmask4)  # coordinat
shapeFeatures <- computeFeatures.shape(nmask4) # get radiuus, perimetr, area for a future IT IS MATERIAL FOR XGBOOST
BlobTable=data.frame(fts,shapeFeatures,img=name,img_pth=img_pth)
resultBlob_tmp=rbind(resultBlob_tmp,BlobTable)
}
}
library(EBImage)
resultBlob_tmp=NULL
#  resultBlob_tmp <- foreach(i = 1:length(listImageBl),.combine=rbind) %dopar% {
for (i in 1: length (listImageBl)) {
name=basename(listImageBl[i])
img_pth=listImageBl[i]
mask0=preds[i, , , ]
img0 <- t(mask0)
dim(img0) <- c(dimModel[1], dimModel[2], 1)
img = getFrame(img0, 1)
nmask = thresh(img, 18, 18, 0.009)
nmask1 <- fillHull(nmask)
nmask2 = opening(nmask1, makeBrush(7,shape='disc') ) # shape='Gaussian', sigma=50
if (Species != "LRG") { nmask2 = erode(nmask2, makeBrush(3, shape='diamond'))}
nmask3 = fillHull(nmask2)
nmask4 = bwlabel(nmask3)
if (max(nmask4)!=0) {
fts = computeFeatures.moment(nmask4)  # coordinat
shapeFeatures <- computeFeatures.shape(nmask4) # get radiuus, perimetr, area for a future IT IS MATERIAL FOR XGBOOST
BlobTable=data.frame(fts,shapeFeatures,img=name,img_pth=img_pth)
resultBlob_tmp=rbind(resultBlob_tmp,BlobTable)
}
}
name
i
i+1200
runApp('C:/Users/usato/SSL_DB/AUC')
f
i
length (listImageBl)
resultBlob_tmp=NULL
#  resultBlob_tmp <- foreach(i = 1:length(listImageBl),.combine=rbind) %dopar% {
for (i in 1: length (listImageBl)) {
name=basename(listImageBl[i])
img_pth=listImageBl[i]
mask0=preds[i, , , ]
img0 <- t(mask0)
dim(img0) <- c(dimModel[1], dimModel[2], 1)
img = getFrame(img0, 1)
nmask = thresh(img, 18, 18, 0.009)
nmask1 <- fillHull(nmask)
nmask2 = opening(nmask1, makeBrush(7,shape='disc') ) # shape='Gaussian', sigma=50
if (Species != "LRG") { nmask2 = erode(nmask2, makeBrush(3, shape='diamond'))}
nmask3 = fillHull(nmask2)
nmask4 = bwlabel(nmask3)
if (max(nmask4)!=0) {
fts = computeFeatures.moment(nmask4)  # coordinat
shapeFeatures <- computeFeatures.shape(nmask4) # get radiuus, perimetr, area for a future IT IS MATERIAL FOR XGBOOST
BlobTable=data.frame(fts,shapeFeatures,img=name,img_pth=img_pth)
resultBlob_tmp=rbind(resultBlob_tmp,BlobTable)
}
}
i
length (listImageBl)
Species=strsplit(basename(listPreds[f]),split = "_")[[1]][2]
pth_resultBlob <<- paste0(labelInput,"\\Predict\\",Species,"_BlobTable_", date1, ".csv")
pth_resultBlob_tmp <<-paste0(labelInput,"\\Predict\\",Species, "_BlobTable_", date1, "_tmp.csv")
PredsRDS=readRDS(listPreds[f])
listImageBl=PredsRDS$listImageBl
preds=PredsRDS$preds
dimModel=PredsRDS$dimModel
dimPreds=PredsRDS$DimPreds
dim(preds)=c(dimPreds)
name=basename(listImageBl[i])
img_pth=listImageBl[i]
img_pth
mask0=preds[i, , , ]
runApp('C:/Users/usato/SSL_DB/AUC')
runApp('C:/Users/usato/SSL_DB/AUC')
runApp('C:/Users/usato/SSL_DB/AUC')
runApp('C:/Users/usato/SSL_DB/AUC')
shiny::runApp('C:/Users/usato/SSL_DB/AUC')
runApp('C:/Users/usato/SSL_DB/AUC')
runApp('C:/Users/usato/SSL_DB/AUC')
runApp('C:/Users/usato/SSL_DB/AUC')
1.42549e-07/ 1.68941328674803
9.15264e-08/ 1.68941328674803
runApp('C:/Users/usato/SSL_DB/AUC')
runApp('C:/Users/usato/SSL_DB/AUC')
runApp('C:/Users/usato/SSL_DB/AUC')
runApp('C:/Users/usato/SSL_DB/AUC')
Species %in% c("NFSAdult" ,"SSLAdult")
runApp('C:/Users/usato/SSL_DB/AUC')
library(spatialEco)
library(dplyr)
library(raster)
library(rgdal)
labelInput
Species
date1<<-substr(basename(labelInput),1,15)
useModelPol=F
ModelPoligonPTH=NULL
HouloutPoligonPTH=NULL
RookeryPolygonPTH=NULL
ObserverPointPTH=NULL
PredictPointPTH=NULL
PredPTHr=""
PredPTHh=""
ModelPoligonDIR=paste0(labelInput,"\\Polygons\\Model")
HouloutPoligonDIR=paste0(labelInput,"\\Polygons\\Haulout")
RookeryPolygonDIR=paste0(labelInput,"\\Polygons\\Rookery")
ObserverPointDIR=paste0(labelInput,"\\Observer_count")
PredictPointPTH = paste0(labelInput,"\\Predict\\", Species,"_", date1, ".csv")
PredictPointPTH_kml = paste0(labelInput,"\\Predict\\", Species,"_", date1, ".kml")
PredictPointPTH_SSL =  paste0(labelInput,"\\Predict\\",  date1,"_",Species, "_AgeLatLon.csv")
PredictPointPTH_SSL_PUP = paste0(labelInput,"\\Predict\\SSLPup_", date1,".kml")
crs=CRS("+proj=longlat +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +no_defs")
AnimalsDensPTH= paste0(labelInput,"\\Predict\\",  date1,"_",Species, "_AnimalDense.csv")
save_pth_check_diff=paste0(labelInput,"\\Predict\\Check_difference",Species,"_", date1, ".csv")
if(dir.exists(ObserverPointDIR)==F){ObserverPointDIR=paste0(labelInput,"\\Observer count")}
if(dir.exists(PredictPointPTH_SSL)==F){PredictPointPTH_SSL=PredictPointPTH}
ModelPoligonPTH=list.files(ModelPoligonDIR,full.names=T,pattern=".shp")
HouloutPoligonPTH=list.files(HouloutPoligonDIR,full.names=T,pattern=".shp")
RookeryPolygonPTH=list.files(RookeryPolygonDIR,full.names=T,pattern=".shp")
ObserverPointPTH=list.files(ObserverPointDIR,full.names=T,pattern=".shp")[1]
##############################################################################################################
if (Species %in% c("NFSAdult" ,"SSLAdult")  & file.exists(ObserverPointPTH)) {		# & file.exists(ModelPoligonPTH)
ObserverPoint= shapefile(ObserverPointPTH)
PredictPoint1=readOGR(PredictPointPTH_kml)
ModelPoligon1=shapefile(ModelPoligonPTH)   #ModelPoligonPTH
proj4string(ModelPoligon1) <- crs
proj4string(ObserverPoint) <- crs
proj4string(PredictPoint1) <- crs
ObserverCount = ObserverPoint[!is.na(over(ObserverPoint,as(ModelPoligon1,"SpatialPolygons"))),]
PredictCount= PredictPoint1[!is.na(over(PredictPoint1,as(ModelPoligon1,"SpatialPolygons"))),]
ObserverCount$age= ObserverCount$LAYER
ObserverCount$age= gsub("CU_AN","AN",ObserverCount$age)
ObserverCount$age= gsub("CU_TN","TF",ObserverCount$age)
ObserverCount$age= gsub("CU_TF","TF",ObserverCount$age)
ObserverCount$age= gsub("CU_F","F",ObserverCount$age)
ObserverCount$age= gsub("CU_D","U",ObserverCount$age)
ObserverCount$age= gsub("CU_UNK","U",ObserverCount$age)
ObserverCount$age= gsub("CU_SA","Bch",ObserverCount$age)
ObserverCount$age= gsub("CU_J","Bch",ObserverCount$age)
PredictCount$age= PredictCount$Description
PredictCount=data.frame(age=PredictCount$age)
ObserverCount=data.frame(age=ObserverCount$age)
PredictCount1  = PredictCount %>% group_by(age) %>% summarise( count=n())
ObserverCount1 = ObserverCount %>% group_by(age) %>% summarise( count=n())
Compare1=merge(PredictCount1,ObserverCount1,by="age",all=T)
names(Compare1)=c("age","AutoCount", "ObserverCount")
Compare1$diffInd=Compare1$AutoCount-Compare1$ObserverCount
Compare1$diffPerc=Compare1$diffInd/Compare1$ObserverCount*100
TottalErrorIndivid=abs(sum(Compare1$ObserverCount,na.rm = T)- sum(Compare1$AutoCount,na.rm = T))
TottalErrorPercent=TottalErrorIndivid/sum(Compare1$ObserverCount,na.rm = T)*100
Report=list(date1=basename(labelInput),
Species=Species,
Compare1=Compare1,
TottalErrorIndivid=TottalErrorIndivid,
TottalErrorPercent=TottalErrorPercent
)
WriteReport=data.frame(Report$Compare1,date1=basename(labelInput),Species=Species)
write.csv(WriteReport, save_pth_check_diff,row.names=F)
print(Report)
}
Compare1
sum(Compare1$ObserverCount[Compare1$age!= "P"],na.rm = T)
sum(Compare1$ObserverCount,na.rm = T)
sum(Compare1$AutoCount[Compare1$age!= "P"],na.rm = T)
observerCountAdult=sum(Compare1$ObserverCount[Compare1$age!= "P"],na.rm = T)
autocountAdult=sum(Compare1$AutoCount[Compare1$age!= "P"],na.rm = T)
TottalErrorIndivid=abs(observerCountAdult- autocountAdult)
TottalErrorPercent=TottalErrorIndivid/observerCountAdult*100
TottalErrorPercent
TottalErrorIndivid
runApp('C:/Users/usato/SSL_DB/AUC')
runApp('C:/Users/usato/SSL_DB/AUC')
if (!require("Rcpp")) {install.packages("Rcpp"); library("Rcpp")}
head(PupPoints1)
kmlPathSave
readOGR(paste0(labelInput,"\\Predict\\SSLAdult_",date1".kml"))
paste0(labelInput,"\\Predict\\SSLAdult_",date1".kml")
adult=readOGR(paste0(labelInput,"\\Predict\\SSLAdult_",date1,".kml"))
head
adult
data.frame(adult)
head(PupPoints1)
PupPoints1=PupPoints1[PupPoints1$age ! ="SmallError",]
adult=readOGR(paste0(labelInput,"\\Predict\\SSLAdult_",date1,".kml"))
PointsHoulout2=data.frame(area="", lat= coords.x1,lon= coords.x2, age= Description)
#########################################################################################################
PointsToWrite=rbind(PointsHoulout2,RookeryPoints,PupPoints1)
PupPoints1=PupPoints1[PupPoints1$age ! ="SmallError",]
adult=data.frame(readOGR(paste0(labelInput,"\\Predict\\SSLAdult_",date1,".kml")))
PointsHoulout2=data.frame(area="", lat= adult$coords.x1,lon= adult$coords.x2, age= adult$Description)
#########################################################################################################
PointsToWrite=rbind(PointsHoulout2,RookeryPoints,PupPoints1)
KMLwrite(Img3=PointsToWrite,kmlPathSave=kmlPathSave)
PointsToWrite
runApp('C:/Users/usato/SSL_DB/AUC')
kmlPathSave=paste0(labelInput,"\\Predict\\","SSLAdult", "_", date1, ".kml")
PupPoints=Pointsfilter(tble=dat3,pthPolygon=Haulout_polygon)
PupPoints1=data.frame(area=PupPoints$area,lat= PupPoints$lon ,lon=PupPoints$lat)
PupPoints1$age="P"
for (k  in 1:length(PupPoints1$area)) {
if (PupPoints1$area[k] <= BlobFemaleLimit)  {PupPoints1$age[k]="P"}
if (PupPoints1$area[k] <= 70)  {PupPoints1$age[k]="SmallError"}
if (PupPoints1$area[k] > BlobFemaleLimit)   {PupPoints1$age[k]="BigError"}
}
PupPoints1=PupPoints1[PupPoints1$age ! ="SmallError",]
PupPoints1=PupPoints1[PupPoints1$age != "SmallError",]
runApp('C:/Users/usato/SSL_DB/AUC')
if (Species =="SSLPup") {
kmlPathSave=paste0(labelInput,"\\Predict\\","SSLAdult", "_", date1, ".kml")
PupPoints=Pointsfilter(tble=dat3,pthPolygon=Haulout_polygon)
PupPoints1=data.frame(area=PupPoints$area,lat= PupPoints$lon ,lon=PupPoints$lat)
PupPoints1$age="P"
for (k  in 1:length(PupPoints1$area)) {
if (PupPoints1$area[k] <= BlobFemaleLimit)  {PupPoints1$age[k]="P"}
if (PupPoints1$area[k] <= 70)  {PupPoints1$age[k]="SmallError"}
if (PupPoints1$area[k] > BlobFemaleLimit)   {PupPoints1$age[k]="BigError"}
}
PupPoints1=PupPoints1[PupPoints1$age != "SmallError",]
adult=data.frame(readOGR(paste0(labelInput,"\\Predict\\SSLAdult_",date1,".kml")))
PointsHoulout2=data.frame(area="", lat= adult$coords.x1,lon= adult$coords.x2, age= adult$Description)
}
#########################################################################################################
PointsToWrite=rbind(PointsHoulout2,RookeryPoints,PupPoints1)
KMLwrite(Img3=PointsToWrite,kmlPathSave=kmlPathSave)
kmlPathSave=paste0(labelInput,"\\Predict\\","SSLAdult", "_", date1, ".kml")
PupPoints=Pointsfilter(tble=dat3,pthPolygon=Haulout_polygon)
PupPoints1=data.frame(area=PupPoints$area,lat= PupPoints$lon ,lon=PupPoints$lat)
PupPoints1$age="P"
for (k  in 1:length(PupPoints1$area)) {
if (PupPoints1$area[k] <= BlobFemaleLimit)  {PupPoints1$age[k]="P"}
if (PupPoints1$area[k] <= 70)  {PupPoints1$age[k]="SmallError"}
if (PupPoints1$area[k] > BlobFemaleLimit)   {PupPoints1$age[k]="BigError"}
}
PupPoints1=PupPoints1[PupPoints1$age != "SmallError",]
adult=data.frame(readOGR(paste0(labelInput,"\\Predict\\SSLAdult_",date1,".kml")))
PointsHoulout2=data.frame(area="", lat= adult$coords.x1,lon= adult$coords.x2, age= adult$Description)
PointsHoulout2
PointsToWrite=rbind(PointsHoulout2,RookeryPoints,PupPoints1)
KMLwrite(Img3=PointsToWrite,kmlPathSave=kmlPathSave)
runApp('C:/Users/usato/SSL_DB/AUC')
head(adult)
head(PupPoints1)
shiny::runApp('C:/Users/usato/SSL_DB/AUC')
shiny::runApp('C:/Users/usato/SSL_DB/AUC')
runApp('C:/Users/usato/SSL_DB/AUC')
runApp('C:/Users/usato/SSL_DB/AUC')
head(PupPoints1)
head(rk)
PupPoints1$area=NULL
rk=read.csv(rkPTH);Hl=read.csv(hPth)
ad=rbind(rk,Hl)
adults1=data.frame(lat =adl$at,     lon=ad$lon,  age=ad$age)
PointsToWrite=rbind(PupPoints1,adults1)
rk=read.csv(rkPTH);Hl=read.csv(hPth)
ad=rbind(rk,Hl)
adults1=data.frame(lat =ad$at,     lon=ad$lon,  age=ad$age)
PointsToWrite=rbind(PupPoints1,adults1)
head(rk)
head(Hl)
ad=rbind(rk,Hl)
adults1=data.frame(lat =ad$lat,     lon=ad$lon,  age=ad$age)
PointsToWrite=rbind(PupPoints1,adults1)
runApp('C:/Users/usato/SSL_DB/AUC')
kmlPathSave=paste0(labelInput,"\\Predict\\","SSLAdult", "_", date1, ".kml")
PupPoints=Pointsfilter(tble=dat3,pthPolygon=Haulout_polygon)
PupPoints1=data.frame(area=PupPoints$area,lat= PupPoints$lon ,lon=PupPoints$lat)
PupPoints1$age="P"
for (k  in 1:length(PupPoints1$area)) {
if (PupPoints1$area[k] <= BlobFemaleLimit)  {PupPoints1$age[k]="P"}
if (PupPoints1$area[k] <= 70)  {PupPoints1$age[k]="SmallError"}
# if (PupPoints1$area[k] > BlobFemaleLimit)   {PupPoints1$age[k]="BigError"}
}
PupPoints1=PupPoints1[PupPoints1$age != "SmallError",]
PupPoints1$area=NULL
#########
rkPTH = paste0(labelInput,"\\Predict\\",date1,"_", "SSLAdult","_ROOKERY.csv")
hPth = paste0(labelInput,"\\Predict\\",date1,"_", "SSLAdult","_HAULOUT.csv")
kmlPathSave=paste0(labelInput,"\\Predict\\","SSLAdult", "_", date1, ".kml")
rk=read.csv(rkPTH);Hl=read.csv(hPth)
ad=rbind(rk,Hl)
head(ad)
adults1=data.frame(lat =ad$lat,     lon=ad$lon,  age=ad$age)
head(adults1)
head(PupPoints1)
kmlPathSave
kmlPathSave=paste0(labelInput,"\\Predict\\","SSLAdult", "_", date1, ".kml")
PupPoints=Pointsfilter(tble=dat3,pthPolygon=Haulout_polygon)
PupPoints1=data.frame(area=PupPoints$area,lat= PupPoints$lon ,lon=PupPoints$lat)
PupPoints1$age="P"
for (k  in 1:length(PupPoints1$area)) {
if (PupPoints1$area[k] <= BlobFemaleLimit)  {PupPoints1$age[k]="P"}
if (PupPoints1$area[k] <= 70)  {PupPoints1$age[k]="SmallError"}
# if (PupPoints1$area[k] > BlobFemaleLimit)   {PupPoints1$age[k]="BigError"}
}
PupPoints1=PupPoints1[PupPoints1$age != "SmallError",]
PupPoints1$area=NULL
#########
rkPTH = paste0(labelInput,"\\Predict\\",date1,"_", "SSLAdult","_ROOKERY.csv")
hPth = paste0(labelInput,"\\Predict\\",date1,"_", "SSLAdult","_HAULOUT.csv")
kmlPathSave=paste0(labelInput,"\\Predict\\","SSLAdult", "_", date1, ".kml")
rk=read.csv(rkPTH);Hl=read.csv(hPth)
ad=rbind(rk,Hl)
adults1=data.frame(lat =ad$lat,     lon=ad$lon,  age=ad$age)
PointsToWrite=rbind(PupPoints1,adults1)
head(PointsToWrite)
length(PointsToWrite$lat)
RookeryPoints
PointsToWrite=rbind(PointsHoulout2,RookeryPoints,PupPoints1)
KMLwrite(Img3=PointsToWrite,kmlPathSave=kmlPathSave)
head(PointsToWrite)
kmlPathSave
if (Species =="SSLPup") {
kmlPathSave=paste0(labelInput,"\\Predict\\","SSLAdult", "_", date1, ".kml")
PupPoints=Pointsfilter(tble=dat3,pthPolygon=Haulout_polygon)
PupPoints1=data.frame(area=PupPoints$area,lat= PupPoints$lon ,lon=PupPoints$lat)
PupPoints1$age="P"
for (k  in 1:length(PupPoints1$area)) {
if (PupPoints1$area[k] <= BlobFemaleLimit)  {PupPoints1$age[k]="P"}
if (PupPoints1$area[k] <= 70)  {PupPoints1$age[k]="SmallError"}
# if (PupPoints1$area[k] > BlobFemaleLimit)   {PupPoints1$age[k]="BigError"}
}
PupPoints1=PupPoints1[PupPoints1$age != "SmallError",]
PupPoints1$area=NULL
#########
rkPTH = paste0(labelInput,"\\Predict\\",date1,"_", "SSLAdult","_ROOKERY.csv")
hPth = paste0(labelInput,"\\Predict\\",date1,"_", "SSLAdult","_HAULOUT.csv")
kmlPathSave=paste0(labelInput,"\\Predict\\","SSLAdult", "_", date1, ".kml")
rk=read.csv(rkPTH);Hl=read.csv(hPth)
ad=rbind(rk,Hl)
adults1=data.frame(lat =as.numeric(ad$lat),     lon=as.numeric(ad$lon),  age=ad$age)
PointsToWrite=rbind(PupPoints1,adults1)
}
#########################################################################################################
PointsToWrite=rbind(PointsHoulout2,RookeryPoints,PupPoints1)
KMLwrite(Img3=PointsToWrite,kmlPathSave=kmlPathSave)
head(PointsToWrite)
if (Species =="SSLPup") {
kmlPathSave=paste0(labelInput,"\\Predict\\","SSLAdult", "_", date1, ".kml")
PupPoints=Pointsfilter(tble=dat3,pthPolygon=Haulout_polygon)
PupPoints1=data.frame(area=PupPoints$area,lat= PupPoints$lon ,lon=PupPoints$lat)
PupPoints1$age="P"
for (k  in 1:length(PupPoints1$area)) {
if (PupPoints1$area[k] <= BlobFemaleLimit)  {PupPoints1$age[k]="P"}
if (PupPoints1$area[k] <= 70)  {PupPoints1$age[k]="SmallError"}
# if (PupPoints1$area[k] > BlobFemaleLimit)   {PupPoints1$age[k]="BigError"}
}
PupPoints1=PupPoints1[PupPoints1$age != "SmallError",]
PupPoints1$area=NULL
#########
rkPTH = paste0(labelInput,"\\Predict\\",date1,"_", "SSLAdult","_ROOKERY.csv")
hPth = paste0(labelInput,"\\Predict\\",date1,"_", "SSLAdult","_HAULOUT.csv")
kmlPathSave=paste0(labelInput,"\\Predict\\","SSLAdult", "_", date1, ".kml")
rk=read.csv(rkPTH);Hl=read.csv(hPth)
ad=rbind(rk,Hl)
adults1=data.frame(lat =as.numeric(ad$lat),     lon=as.numeric(ad$lon),  age=ad$age)
PointsToWrite=rbind(PupPoints1,adults1)
}
#########################################################################################################
PointsToWrite=rbind(PointsHoulout2,RookeryPoints,PupPoints1)
KMLwrite(Img3=PointsToWrite,kmlPathSave=kmlPathSave)
if (Species == "NFSPup") {
PupPoints=Pointsfilter(tble=dat3,pthPolygon=Haulout_polygon)
PupPoints1=data.frame(area=PupPoints$area,lat= PupPoints$lon ,lon=PupPoints$lat)
for (k  in 1:length(PupPoints1$area)) {
if (PupPoints1$area[k] <= BlobFemaleLimit)  {PupPoints1$age[k]="P"}
if (PupPoints1$area[k] <= 70)  {PupPoints1$age[k]="SmallError"}
if (PupPoints1$area[k] > BlobFemaleLimit)   {PupPoints1$age[k]="BigError"}
}
#  if (Species == "SSLPup") {PupPoints1=PupPoints1 %>% filter( area > limitSmallError)}
}
######################################################################################################
if (Species =="SSLPup") {
kmlPathSave=paste0(labelInput,"\\Predict\\","SSLAdult", "_", date1, ".kml")
PupPoints=Pointsfilter(tble=dat3,pthPolygon=Haulout_polygon)
PupPoints1=data.frame(area=PupPoints$area,lat= PupPoints$lon ,lon=PupPoints$lat)
PupPoints1$age="P"
for (k  in 1:length(PupPoints1$area)) {
if (PupPoints1$area[k] <= BlobFemaleLimit)  {PupPoints1$age[k]="P"}
if (PupPoints1$area[k] <= 70)  {PupPoints1$age[k]="SmallError"}
# if (PupPoints1$area[k] > BlobFemaleLimit)   {PupPoints1$age[k]="BigError"}
}
PupPoints1=PupPoints1[PupPoints1$age != "SmallError",]
PupPoints1$area=NULL
#########
rkPTH = paste0(labelInput,"\\Predict\\",date1,"_", "SSLAdult","_ROOKERY.csv")
hPth = paste0(labelInput,"\\Predict\\",date1,"_", "SSLAdult","_HAULOUT.csv")
kmlPathSave=paste0(labelInput,"\\Predict\\","SSLAdult", "_", date1, ".kml")
rk=read.csv(rkPTH);Hl=read.csv(hPth)
ad=rbind(rk,Hl)
adults1=data.frame(lat =as.numeric(ad$lat),     lon=as.numeric(ad$lon),  age=ad$age)
PointsHoulout2=rbind(PupPoints1,adults1)
}
#########################################################################################################
PointsToWrite=rbind(PointsHoulout2,RookeryPoints,PupPoints1)
KMLwrite(Img3=PointsToWrite,kmlPathSave=kmlPathSave)
runApp('C:/Users/usato/SSL_DB/AUC')
runApp('C:/Users/usato/SSL_DB/AUC')
runApp('C:/Users/usato/SSL_DB/AUC')
1.03282e-07/ 1.24489765071611
6.85661e-08/ 1.24489765071611
runApp('C:/Users/usato/SSL_DB/AUC')
runApp('C:/Users/usato/SSL_DB/AUC')
runApp('C:/Users/usato/SSL_DB/AUC')
runApp('C:/Users/usato/SSL_DB/AUC')
runApp('C:/Users/usato/SSL_DB/AUC')
shiny::runApp('C:/Users/usato/SSL_DB/AUC')
runApp('C:/Users/usato/SSL_DB/AUC')
runApp('C:/Users/usato/SSL_DB/AUC')
runApp('C:/Users/usato/SSL_DB/AUC')
runApp('C:/Users/usato/SSL_DB/AUC')
8.88846e-08/ 1.121943503594
6.01347e-08/ 1.121943503594
runApp('C:/Users/usato/SSL_DB/AUC')
runApp('C:/Users/usato/SSL_DB/AUC')
shiny::runApp('C:/Users/usato/SSL_DB/AUC')
runApp('C:/Users/usato/SSL_DB/AUC')
runApp('C:/Users/usato/SSL_DB/AUC')
runApp('C:/Users/usato/SSL_DB/AUC')
shiny::runApp('C:/Users/usato/SSL_DB/AUC')
runApp('C:/Users/usato/SSL_DB/AUC')
runApp('C:/Users/usato/SSL_DB/AUC')
runApp('C:/Users/usato/SSL_DB/AUC')
runApp('C:/Users/usato/SSL_DB/AUC')
runApp('C:/Users/usato/SSL_DB/AUC')
1.13182e-07/ 1.29055440910168
7.26714e-08/ 1.29055440910168
runApp('C:/Users/usato/SSL_DB/AUC')
shiny::runApp('C:/Users/usato/SSL_DB/AUC')
runApp('C:/Users/usato/SSL_DB/AUC')
runApp('C:/Users/usato/SSL_DB/AUC')
runApp('C:/Users/usato/SSL_DB/AUC')
runApp('C:/Users/usato/SSL_DB/AUC')
1.08891e-07/ 1.30375449114022
7.36704e-08/ 1.30375449114022
runApp('C:/Users/usato/SSL_DB/AUC')
shiny::runApp('C:/Users/usato/SSL_DB/AUC')
runApp('C:/Users/usato/SSL_DB/AUC')
runApp('C:/Users/usato/SSL_DB/AUC')
