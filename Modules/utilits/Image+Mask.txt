library (magick)

generalPath= paste0(labelInput,"\\Mask_Image")
ImagePath=paste0(generalPath,"\\", "Image")
MaskPath=paste0(generalPath,"\\", "Mask")
PathCheck=paste0(generalPath,"\\", "Check")
unlink(PathCheck, recursive=T)
dir.create(PathCheck)
MskList=list.files(MaskPath)



library(parallel)
library(doParallel)
library(foreach)

cl <- makePSOCKcluster(4) 
clusterEvalQ(cl, {
library(magick)
})
	
registerDoParallel(cl)


foreach(i = 1:length(MskList)) %dopar% {

  mskP=paste0(MaskPath,"\\",MskList[i]) 
  ImgP= paste0(ImagePath,"\\",gsub("png","jpg",MskList[i]))

   image=image_read(ImgP)
   mask=image_read(mskP)
   Check=image_composite(image,mask,operator = "blend", compose_args="70")
   PathCheckImg=paste0(PathCheck,"\\",MskList[i])
   
   image_write(Check,PathCheckImg,format="jpg")
}



  #  pth=MskList[i]
  #  mskP=paste0(Masks_Path,"/",pth) 
  #  ImgP= paste0(Images_Path,"/",gsub("png","jpg",pth))
    
#	img=readImage(ImgP)
#    msk=readImage(mskP)
#      y1 = channel(msk, 'asred')
#	  a= img+y1
#   PathCheckImg=paste0(Check_Path,"/",pth)
#   writeImage(a,PathCheckImg)